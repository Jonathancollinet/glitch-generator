{
    "navigation": {
        "links": {
            "home": "Home",
            "editor": "Editor",
            "help": "Help"
        }
    },
    "footer": {
        "text": "Glitch Generator - Inspiration from"
    },
    "pages": {
        "help": {
            "title": "$> man glitch-generator",
            "summary": {
                "tool": "The tool",
                "input": "The input",
                "keyframes": "Keyframes",
                "export": "Export",
                "import": "Import",
                "presets": "Presets"
            },
            "tool": {
                "title": "The tool",
                "what": "The tool's main goal is to help you to create complex text/box shadow animations. At any moment, you can retrieve your animation as a CSS keyframes to use it in your web project.",
                "generate": "Under the hood, the tool creates the animation with",
                "animationAPI": "the web API Animation()",
                "ifSupported": "if your browser supports it, or with an hot injected CSS keyframes in the header."
            },
            "input": {
                "title": "The input",
                "what": "There are 3 things you can edit:",
                "text": "1. The text style: under 'styles' card, the displayed text and his container CSS properties, such as color, background, font-size, padding, border-radius.",
                "textAnimation": "2. The text animation parameters: under 'animation' card, the animation duration.",
                "animation": "3. The animation keyframes: under the displayed text area. You can add, remove, duplicate, reverse, and edit the field's [text/box]-shadow CSS declarations. See the next part to understand how Keyframes works."
            },
            "keyframes": {
                "title": "Keyframes",
                "what": "The keyframes are the CSS at-rule used to define the styles an element will have at various times. The tool is focused on the text-shadow and box-shadow properties to create glitch-like effect.",
                "how": "The keyframes are defined by a list of ranges.",
                "range": "A range represents a cumulative set of fields.",
                "field": "A field is a set of text-shadow and/or box-shadow CSS properties that will be applied to the text at a specific time.",
                "multipleRanges": "You can have multiple ranges in the keyframes. The tool will accumulate the fields of each range to create the final animation.",
                "exemple": "Let's say you have one range with 2 fields, one at 0%, and the other at 50%.",
                "result": "The ouput will be:",
                "exemple2": "What if we duplicate this range ?",
                "result2": "The ouput will be:",
                "result2bis": "We can see that ranges are cumulative. Because we have same fields with same offset position in the keyframes, the tool understand that he have to cumulate values.",
                "exemple3": "But now, what happens if we change the offset position of the second field to 75% in the duplicated range ?",
                "result3": "The output will be:",
                "result3bis": "Wait, what ? Why have i only one value at 50% and at 75% ? Yes because the tool detected that both values are equivalents. There is another subtility to understand:",
                "introduceFill": "Absolutly, but before going further, let's introduce the 'fill' option.",
                "fill": "The 'fill' option is a boolean that indicates if the field should be applied to all the frames of the field area until the next field or range's end.",
                "fillExemple": "In the previous exemples, every fields have the 'fill' option disabled.",
                "fillExemple2": "If you take a look at the last ranges image, you can see a gradient from purple to red. This is because the animation will do a transition from the first field to the second field, that is the normal CSS keyframes behavior.",
                "fillExemple3": "Let's try to change the second field's color of the second range in yellow for exemple:",
                "fillExemple3result": "Nice, now we have a yellow field at 75% and a red field at 50%. But because there are two ranges, it should be there two values, right ?",
                "fillExemple3resultbis": "Remember, ranges are cumulative. So in our exemple, with every fields with 'fill' option disabled, only both first field's range are at exact same position, so we accumulate the values. But it's not the case of the second field's ranges. So we have two values at 50% and 75%.",
                "fillExemple4": "Now, let's enable the 'fill' option for every fields:",
                "fillExemple4result": "We haven't any gradient anymore. The animation will apply the fields to all frames until the next field or animation's end. Let's check the output:",
                "fillExemple4resultbis": "Disable the 'fill' option can be powerfull to have smooth transitions between two fields or range's end, but enable it can be usefull if you plane to specify a lot of fields.",
                "fillDefault": "The 'fill' option is enabled by default. Having a mix of enabled and disabled 'fill' option in multiple ranges can be tricky, you should know exactly what you are doing.",
                "fillImportant": "Always remember the 'cumulative' tool behavior.",
                "mistakes": "A common mistake is to think that the second range will 'add' a value to our property. But if in every ranges at this offset it's the only active frame, it will resolve as the first value of the property. This creates a bridge between the second and the first range. If this isn't the wanted behavior, you have to rethink the animation."
            },
            "export": {
                "title": "Export",
                "what": "The export feature allows you to retrieve your animation as a CSS keyframes to use it in your web project.",
                "kind": "There are two ways to export the animation:",
                "css": "Export the CSS code, gives you the keyframes at-rule and the text style class.",
                "config": "Export the configuration, it will interest you only if you want to add your creation into the built-in presets. If you want to apply your animation for built-in presets, you can open an issue 'Add preset: My Awesome Animation Name' with the configuration output on the github repository. I will treat it as soon as possible."
            },
            "import": {
                "title": "Import",
                "what": "The import feature allows you to import a CSS keyframes to use it in the tool.",
                "why": "You worked hard on a keyframes and you want to visualize and edit it in the tool ? This feature is for you.",
                "css": "You have to provide at least the preset name and the keyframe at-rule.",
                "text": "You can optionnaly provide the text style."
            },
            "presets": {
                "title": "Presets",
                "what": "The tool comes with built-in presets. They are prefixed by a star '*'. You can choose one of them in the editor. You can also save your current settings as a custom preset.",
                "autosave": "The tool will automatically save your custom presets in your browser's local storage.",
                "noSaveOnBuiltins": "You can't save built-in presets. If you want to modify them, you have to create a custom preset from the wanted built-in.",
                "presetOfPreset": "You can also create a custom preset from another custom preset."
            }
        },
        "home": {
            "title": "Glitch Generator",
            "description": "Glitch editor based on the text-shadow & box-shadow CSS properties.",
            "why": {
                "title": "Why?",
                "description": "Because it's fun! I wanted a user-friendly tool to generate glitch effects.",
                "result": "This is the result.",
                "also": "Type whatever you want and see the magic happen!",
                "result2": "ðŸ‘½ ðŸ”Š ðŸŒŽ"
            },
            "share": {
                "title": "Export",
                "description": "Retrieve your animation as a CSS keyframe.",
                "button": "Try it!"
            }
        },
        "editor": {
            "title": "Editor",
            "launchTour": "Start the tutorial",
            "selectPreset": "Choose a built-in or custom preset",
            "savePreset": "Save current settings as a custom preset",
            "removePreset": "Delete current custom preset",
            "rangeOptions": "Range options",
            "rangeShortcuts": "Mouse shortcuts",
            "ranges": "Shadow's ranges",
            "export": "Get code",
            "import": "Import",
            "config": {
                "color": {
                    "textBgColorHex": "Background",
                    "textColorHex": "Color",
                    "textShadow": {
                        "fieldColorHex": "Color"
                    },
                    "boxShadow": {
                        "fieldColorHex": "Color"
                    }
                },
                "animation": {
                    "title": "Animation",
                    "animationDuration": "Duration (ms)"
                },
                "text": {
                    "title": "Styles",
                    "padding": "Padding",
                    "borderRadius": "Round",
                    "height": "Height",
                    "fontSize": "Size",
                    "message": "Type your text here"
                },
                "ranges": {
                    "actions": {
                        "addEmptyRange": "Add empty range",
                        "duplicate": "Duplicate range",
                        "reversePositions": "Reverse positions",
                        "reverseColors": "Reverse colors",
                        "removeRange": "Remove range"
                    }
                },
                "field": {
                    "all": "All",
                    "title": "Field",
                    "shadow": "Shadow",
                    "offsetX": "X",
                    "offsetY": "Y",
                    "blur": "Blur",
                    "spread": "Spread",
                    "enabled": "Enabled",
                    "fillAllFrames": "Fill",
                    "fillAllFramesDescription": "If enabled, the shadow will be applied to all frames until the next field or animation's end. If disabled, the shadow will be applied to the current frame offset only.",
                    "offsetFrame": "Field",
                    "offsetFrameDescription": "Offset in keyframes",
                    "removeField": "Remove field",
                    "textShadow": "Text shadow",
                    "boxShadow": "Box shadow"
                }
            }
        }
    },
    "modals": {
        "close": "Close",
        "welcome": {
            "title": "Welcome to Glitch Generator",
            "content": "Glitch Generator allows you to create text/box shadow animations and get the result as a CSS Keyframe.",
            "tutorial": "It's recommended to start the tutorial to understand how the tool basicaly works.",
            "cancel": "Nah, let me just try the tool.",
            "start": "Ok!"
        },
        "addPreset": {
            "title": "Add a custom preset",
            "presetName": "Custom preset name"
        },
        "confirm": {
            "cancel": "Cancel",
            "confirm": "Confirm"
        },
        "deletePreset": {
            "title": "Delete custom preset",
            "text": "Are you sure you want to delete this preset?"
        },
        "export": {
            "title": "Export under",
            "description": "Copy the following CSS code to use the animation in your project.",
            "code": "CSS code",
            "close": "Close",
            "config": "Configuration",
            "style": "CSS"
        },
        "import": {
            "title": "Import",
            "presetName": "Preset name",
            "description": "Paste the text style and the keyframe to import the animation under the preset name.",
            "rules": {
                "action": "Please read import rules",
                "title": "Import rules",
                "notSupported": "Not supported",
                "otherConsiderations": "Other considerations",
                "size": "Other units than 'px'.",
                "noInset": "Inset shadows.",
                "class": "The text style must be a valid CSS rule with any selector.",
                "keyframes": "The keyframe must be a valid CSS keyframes at-rule with any name.",
                "autoPrefixes": "Vendor prefixes are supported (you don't need to remove them).",
                "declarations": "Declarations",
                "onlyConfigClass": "Only declarations handled by the tool are used.",
                "declarationsList": "Handled declarations",
                "textDeclarations": "Text style: color, background, font-size, padding, border-radius.",
                "keyframesDeclarations": "Keyframes at-rules: text-shadow, box-shadow.",
                "otherIgnored": "Other declarations are ignored (you don't need to remove them)."
            },
            "textStyle": "Text style (optionnal)",
            "code": "CSS keyframe",
            "animationDuration": "Animation duration",
            "action": "Import"
        },
        "shortcuts": {
            "title": "Mouse shortcuts",
            "leftClickUp": "Left-click up: select a field.",
            "rightClickUp": "Right-click up: cut a field at the mouse emplacement.",
            "leftClickDrag": "Left-click drag: resize a field.",
            "rightClickDrag": "Right-click drag: choose an offset to cut."
        }
    },
    "errors": {
        "config": {
            "default": "Invalid number.",
            "invalid_type": "Invalid number.",
            "too_small": "Must be >= 0.",
            "too_big": "Must be <= 256.",
            "text": {
                "size": {
                    "default": "Must be a number between 1 and 256.",
                    "invalid_type": "Invalid number, must be between 1 and 256.",
                    "too_small": "Must be >= 1.",
                    "too_big": "Must be <= 256."
                }
            }
        },
        "import": {
            "presetName": "Preset name is required",
            "keyframes": "Invalid keyframes. Check the rules.",
            "textStyle": "Invalid text style. Check the rules."
        }
    }
}